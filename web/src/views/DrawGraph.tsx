import React, { Component } from 'react';


class DrawGraph extends Component {
  canvas = null;
  ctx = null;

  handleChangeField = (e) => {
    try {
      const value = JSON.parse
      );
      // init
      this.ctx = this.canvas.getContext('2d');
      // canvas configs
      this.ctx.fillStyle = 'white'; // 背景颜色
      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);
      this.ctx.strokeStyle = 'black'; // 画笔颜色
      this.ctx.lineWidth = 1; // 线条宽度
      for (let i = 0; i < this.canvas.width; i++) {
        for (let j = 0; j < this.canvas.height; j++) {
          this.ctx.fillStyle = `rgba(0,0,0,${value[j][i]})`; // 背景颜色
          // console.log(this.ctx.fillStyle, value[i][j]);
          this.ctx.fillRect(i, j, 1, 1);
        }
      }
    } catch (e) {
      return console.error('Draw fail.', e);
    }
  };

  render() {
    return (
      <div id="app">
        <textarea
          cols="10"
          rows="10"
          style={{ marginBottom: 20, resize: 'none' }}
          onChange={this.handleChangeField}
        />
        <div className="canvas-container">
          <canvas
            ref={ref => this.canvas = ref}
            width={28}
            height={28}
          />
        </div>
      </div>
    );
  }
}

export default DrawGraph;